/**
 * java script file to create dynamic rows on button click
 */
function addRow(formName,name,tableID,columns) 
{
        var table = document.getElementById(tableID);
        //debugger;
        var rowCount = table.rows.length;
        var counts = rowCount - 1;
        if(name && counts!=-1)
        {
        	var r1=table.rows[counts];
            for(var i=1;i<r1.cells.length;i++){
        		var t=trim(r1.cells[i].childNodes[0].value);
        		if(t==""){
        			alert("Fill Previous row first");
        			r1.cells[i].childNodes[0].focus();
        			return false;
        		}
        		
        	}
        }
        var step;
        var c="";
        var row = table.insertRow(rowCount);
        var prRow=table.rows[counts];
        for(var i=0;i<prRow.cells.length;i++){
        	var cell1 = row.insertCell(i);
        	if(i==0){
        		 var cols1 = document.createElement("input");
           		cols1.type = "checkbox";
            	cols1.name = "Row";
            	cols1.id = "Row";
                cell1.appendChild(cols1);
        	}
        	else{
        		cell1.innerHTML=prRow.cells[i].innerHTML;
        		cell1.style=prRow.cells[i].style;
        	}
        }
        row.cells[1].childNodes[0].focus();
} 
function delRow(formName,name,tableID) 
{
	/*var selectedRowForDelete='';
	var table = document.getElementById(tableID);
	var rowCount = table.rows.length;
	var step;
	for(step=1;step<rowCount;step++){
		var c=document.getElementById("Row");
		if(c.checked==true){
			alert(step);
			table.deleteRow(step);
			rowCount--;
			
		}
	}*/
	var selectedRowForDelete='';
	var table = document.getElementById(tableID);
	var rowCount = table.rows.length;
	if( rowCount>0)
	{
		          	var flag=false;
		          	for(var i=0; i<rowCount; i++)
					{
						var row = table.rows[i];
						var chkbox = row.cells[0].childNodes[0];
							if(null != chkbox && true == chkbox.checked) 
							{
								flag=true;
								selectedRowForDelete=selectedRowForDelete+chkbox.value+"!";
							//	checkedKey=checkedKey+chkbox.id+"!";
								table.deleteRow(i);
								rowCount--;
								i--;
								//count1--;
							}
							else
							{
		            			selectedRowForDelete='';
							}
					}
		          	if(!flag){
		          		alert('Please Select Row For Delete!');	 
		        		return false;
		          	}
	}
	else{
		alert('Please Select Row For Delete!');	 
		return false;
	}
} 
function addButton(formName,name,tableID) 
{
       var table = document.getElementById(tableID);
        var rowCount = table.rows.length;
        var row = table.insertRow(rowCount);
        var counts = rowCount ;
        var cell1 = row.insertCell(0);
        var cols1 = document.createElement("input");
    	cols1.type = "file";
    	cols1.name = name+"[" + counts + "].userImage";
    	cols1.id = formName+"_" +name+"_"+ counts + "__userImage";
    	 cell1.appendChild(cols1);
         cell1 = row.insertCell(1);
        var cols1 = document.createElement("input");
    	cols1.type = "text";
    	cols1.name = name+"[" + counts + "].uiName";
    	cols1.id = formName+"_" +name+"_"+ counts + "__uiName";
        cell1.appendChild(cols1);
       
    }  


  
function addCol(name,tableID,columns,name1,tableID1,columns1) 
{
	   var table = document.getElementById(tableID);
	   var i=0;
	   for(i=0;i<4;i++)
	   {
       var rowCount = table.rows.length;
       var row = table.insertRow(rowCount);
       var counts = rowCount - 1;
       var cell1 = row.insertCell(0);
       var cols1 = document.createElement("label");
       cols1.type = "label";
       cols1.text = name+"[" + counts + "]."+columns[i];
       cols1.value = name+"[" + counts + "]."+columns[i];
       cell1.appendChild(cols1);
       cell1 = row.insertCell(1);
       cols1  = document.createElement("input");
       cols1.type = "text";
       cols1.name = name+"[" + (counts-6-i+1) + "]."+columns[i];
       cols1.value = name+"[" + (counts-6-i+1) + "]."+columns[i];
       cell1.appendChild(cols1);
	   }
	  table = document.getElementById(tableID1);

       var rowCount = table.rows.length;
       var row = table.insertRow(rowCount);
       var counts = rowCount - 1;
       
       var step;
       for (step = 0; step < columns1.length; step++) {
       	var cell1 = row.insertCell(step);
           var cols1 = document.createElement("input");
       	cols1.type = "text";
       	cols1.name = name1+"[" + counts + "]."+columns1[step];
       	cols1.value = name1+"[" + counts + "]."+columns1[step];
       	cell1.appendChild(cols1);
       }
      
       }
function addRowForUtc(formName,flag,tableID,columns)
{
        var table = document.getElementById(tableID);
        debugger;
        var rowCount = table.rows.length;
        var counts = rowCount - 1;
        if(flag && counts!=-1)
        {
        	var r1=table.rows[counts];
            for(var i=1;i<r1.cells.length;i++){
            	var t=trim(r1.cells[i].childNodes[0].value);
            	var isReq=r1.cells[i].childNodes[0].getAttribute("required");
        		if(isReq=="true" && t==""){
        			alert("Fill Previous row first");
        			r1.cells[i].childNodes[0].focus();
        			return false;
        		}
        		
        	}
        }
        var step;
        var c="";
        var row = table.insertRow(rowCount);
        var prRow=table.rows[counts];
        for(var i=0;i<prRow.cells.length;i++){
        	var cell1 = row.insertCell(i);
        	if(i==0){
        		 var cols1 = document.createElement("input");
           		cols1.type = "checkbox";
            	cols1.name = "Row";
            	cols1.id = "Row";
                cell1.appendChild(cols1);
        	}
        	else{
        		if(i!=5){
        			cell1.innerHTML=prRow.cells[i].innerHTML;
        			cell1.style=prRow.cells[i].style;
        			if(cell1.childNodes[0].type=="select-one")
        				cell1.childNodes[0].value="";
        		}else{
        			cell1.innerHTML='<input type="file" name="testScreen" id="testScreen"  multiple onchange="checkUploadImage(this)" '+
        				' required=false class="form-control" /><input type="hidden" name="imageData"/> ';
        			cell1.style=prRow.cells[i].style;
        	    	
        		}
        	}
        }
        row.cells[1].childNodes[0].focus();
} 